DELETE
FROM
  `triverna-datawarehouse.ga4_transformed.events_transformed`
WHERE
  event_date BETWEEN DATE_SUB(DATE(@run_date), INTERVAL 10 DAY)
  AND DATE_SUB(DATE(@run_date), INTERVAL 1 DAY);

INSERT INTO ga4_transformed.events_transformed(
  event_date,	
  event_timestamp,				
  event_name,				
  event_previous_timestamp,				
  event_value_in_usd,				
  event_bundle_sequence_id,				
  event_server_timestamp_offset,				
  user_id,				
  user_pseudo_id,				
  privacy_info,				
  user_properties,				
  user_first_touch_timestamp,				
  user_ltv,				
  device,				
  geo,				
  app_info,				
  traffic_source,				
  stream_id,				
  platform,				
  event_dimensions,				
  ecommerce,				
  items,				
  collected_traffic_source,				
  is_active_user,	
  adults,
  agreementMail,
  agreementSMS,
  basket_date_from,
  basket_date_to,
  campaign,
  campaign_id,
  children,
  click_element,
  click_text,
  click_url,
  content,
  creative_id,
  creative_name,
  credits_value,
  currency,
  debug,
  debug_mode,
  direction,
  ecommerce_price,
  ecommerce_quantity,
  engaged_session_event,
  engagement_time_msec,
  entrances,
  experiment_id,
  facilities,
  file_extension,
  file_name,
  filter_term,
  firebase_conversion,
  first_field_id,
  first_field_name,
  first_field_position,
  first_field_type,
  form_destination,
  form_id,
  form_length,
  form_submit_text,
  date_from,
  ga_session_id,
  ga_session_number,
  gclid,
  gclsrc,
  ignore_referrer,
  item_list_id,
  item_list_name,
  link_classes,
  link_domain,
  link_id,
  link_text,
  link_url,
  loggedIn,
  medium,
  method,
  outbound,
  page_location,
  page_referrer,
  page_title,
  page_url,
  page_version,
  payment_distribution,
  payment_gateway,
  payment_value,
  percent_scrolled,
  placement,
  price_max,
  price_min,
  product_advance_payment,
  product_alimentation,
  product_category,
  product_city,
  product_extras,
  product_id,
  product_name,
  product_price,
  promo_name,
  promoted,
  promotion_id,
  promotion_name,
  reservation_id,
  results_page,
  room_count,
  search_results,
  search_results_type,
  search_term,
  section,
  session_engaged,
  signupType,
  slot,
  source,
  standard,
  term,
  date_to,
  transaction_id,
  unique_search_term,
  userId,
  userOrderCount,
  userTotalValue,
  value,
  variant_id,
  length_of_stay,
  duplicated_flag
)
WITH events AS (
SELECT 
  PARSE_DATE('%Y%m%d', event_date) AS event_date,	
  event_timestamp,				
  event_name,				
  event_previous_timestamp,				
  event_value_in_usd,				
  event_bundle_sequence_id,				
  event_server_timestamp_offset,				
  user_id,				
  user_pseudo_id,				
  privacy_info,				
  user_properties,				
  user_first_touch_timestamp,				
  user_ltv,				
  device,				
  geo,				
  app_info,				
  traffic_source,				
  stream_id,				
  platform,				
  event_dimensions,				
  ecommerce,				
  items,				
  collected_traffic_source,				
  is_active_user,	
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'adults') AS adults,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'agreementMail') AS agreementMail,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'agreementSMS') AS agreementSMS,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'basket_date_from') AS basket_date_from,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'basket_date_to') AS basket_date_to,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'campaign') AS campaign,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'campaign_id') AS campaign_id,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'children') AS children,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'click_element') AS click_element,
  COALESCE(
    CAST((SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'click_text') AS STRING),
    (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'click_text')) AS click_text,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'click_url') AS click_url,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'content') AS content,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'creative_id') AS creative_id,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'creative_name') AS creative_name,
  COALESCE(
    CAST((SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'credits_value') AS FLOAT64),
    (SELECT value.double_value FROM UNNEST (event_params) WHERE key = 'credits_value')) AS credits_value,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'currency') AS currency,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'debug') AS debug,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'debug_mode') AS debug_mode,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'direction') AS direction,
  (SELECT value.double_value FROM UNNEST (event_params) WHERE key = 'ecommerce_price') AS ecommerce_price,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'ecommerce_quantity') AS ecommerce_quantity,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'engaged_session_event') AS engaged_session_event,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'engagement_time_msec') AS engagement_time_msec,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'entrances') AS entrances,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'experiment_id') AS experiment_id,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'facilities') AS facilities,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'file_extension') AS file_extension,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'file_name') AS file_name,
  COALESCE(
    CAST((SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'filter_term') AS STRING),
    (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'filter_term')) AS filter_term,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'firebase_conversion') AS firebase_conversion,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'first_field_id') AS first_field_id,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'first_field_name') AS first_field_name,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'first_field_position') AS first_field_position,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'first_field_type') AS first_field_type,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'form_destination') AS form_destination,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'form_id') AS form_id,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'form_length') AS form_length,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'form_submit_text') AS form_submit_text,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'from') AS date_from,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'ga_session_id') AS ga_session_id,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'ga_session_number') AS ga_session_number,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'gclid') AS gclid,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'gclsrc') AS gclsrc,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'ignore_referrer') AS ignore_referrer,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'item_list_id') AS item_list_id,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'item_list_name') AS item_list_name,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'link_classes') AS link_classes,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'link_domain') AS link_domain,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'link_id') AS link_id,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'link_text') AS link_text,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'link_url') AS link_url,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'loggedIn') AS loggedIn,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'medium') AS medium,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'method') AS method,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'outbound') AS outbound,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'page_location') AS page_location,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'page_referrer') AS page_referrer,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'page_title') AS page_title,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'page_url') AS page_url,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'page_version') AS page_version,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'payment_distribution') AS payment_distribution,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'payment_gateway') AS payment_gateway,
  COALESCE(
    CAST((SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'payment_value') AS FLOAT64),
    (SELECT value.float_value FROM UNNEST (event_params) WHERE key = 'payment_value')) AS payment_value,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'percent_scrolled') AS percent_scrolled,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'placement') AS placement,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'price_max') AS price_max,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'price_min') AS price_min,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'product_advance_payment') AS product_advance_payment,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'product_alimentation') AS product_alimentation,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'product_category') AS product_category,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'product_city') AS product_city,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'product_extras') AS product_extras,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'product_id') AS product_id,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'product_name') AS product_name,
  (SELECT value.double_value FROM UNNEST (event_params) WHERE key = 'product_price') AS product_price,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'promo_name') AS promo_name,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'promoted') AS promoted,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'promotion_id') AS promotion_id,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'promotion_name') AS promotion_name,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'reservation_id') AS reservation_id,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'results_page') AS results_page,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'room_count') AS room_count,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'search_results') AS search_results,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'search_results_type') AS search_results_type,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'search_term') AS search_term,
  COALESCE(
    CAST((SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'section') AS STRING),
    (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'section')) AS section,
  COALESCE(
    CAST((SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'session_engaged') AS STRING),
    (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'session_engaged')) AS session_engaged,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'signupType') AS signupType,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'slot') AS slot,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'source') AS source,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'standard') AS standard,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'term') AS term,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'to') AS date_to,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'transaction_id') AS transaction_id,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'unique_search_term') AS unique_search_term,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'userId') AS userId,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'userOrderCount') AS userOrderCount,
  COALESCE(
    CAST((SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'userTotalValue') AS FLOAT64),
    (SELECT value.double_value FROM UNNEST (event_params) WHERE key = 'userTotalValue')) AS userTotalValue,
  COALESCE(
    CAST((SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'value') AS INTEGER),
    (SELECT value.double_value FROM UNNEST (event_params) WHERE key = 'value')) AS value,
  (SELECT value.string_value FROM UNNEST (event_params) WHERE key = 'variant_id') AS variant_id,
  CASE
    WHEN event_name='add_payment_info' 
    THEN LAG(event_timestamp) OVER(PARTITION BY event_name, user_pseudo_id,(SELECT value.int_value FROM UNNEST(event_params) WHERE key = 'ga_session_id')
      ORDER BY event_timestamp) 
  END AS previous_add_payment_info_timestamp,
  (SELECT value.int_value FROM UNNEST (event_params) WHERE key = 'los') AS length_of_stay
FROM
  `triverna-datawarehouse.analytics_298964636.events_*`
WHERE
  _table_suffix BETWEEN FORMAT_DATE("%Y%m%d", DATE_SUB(DATE(@run_date), INTERVAL 10 DAY))
  AND FORMAT_DATE("%Y%m%d", DATE_SUB(DATE(@run_date), INTERVAL 1 DAY))
  AND stream_id='5134320986')
SELECT * EXCEPT(previous_add_payment_info_timestamp), 
  CASE 
    WHEN TIMESTAMP_DIFF(TIMESTAMP_MICROS(event_timestamp), TIMESTAMP_MICROS(previous_add_payment_info_timestamp), SECOND)<30 THEN 'true' ELSE 'false'
  END AS duplicated_flag
FROM events
